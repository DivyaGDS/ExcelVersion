#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".


DecompressExcel(){

#Location of files
targetClassFolder="./target/classes/excelHelper"
excelMainClass="./src/main/java/excelHelper/ExcelDecompression.java"
excelCompiledClass="./src/main/java/excelHelper/ExcelDecompression.class"
runner="./target/classes excelHelper.ExcelDecompression"

# To check and create a target folder if it is not present to store the java class file
if [ ! -d $targetClassFolder ];then
    mkdir -p $targetClassFolder;
    echo "Target folder doesn't exist. New Folder is created";
fi

# Get the list of files staged for commit and check if it an excel
# If its an excel get the name of the file and pass a sourceFile Parameter to ExcelCompression method
filesList=($(git diff --name-only --cached))

for i in ${!filesList[@]}; do
  if [[ ${filesList[$i]} =~ \.xlsx$ ]];then
  	sourceFile=./${filesList[$i]}
	  destFolder=${sourceFile/.xlsx/DecompressedFolder}
  	echo "Source File Excel is $sourceFile, Dest folder is $destFolder"

	# Compile and run the ExcelDecompression
	  javac $excelMainClass
  	mv $excelCompiledClass "${targetClassFolder}/"
  	java -cp $runner $sourceFile $destFolder

	# Add the xml files decompressed from excel to git
	  git add "${destFolder}/"
  fi
done
}

DecompressExcel
